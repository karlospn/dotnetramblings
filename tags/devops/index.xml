<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/devops/</link>
    <description>Recent content in devops on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Oct 2021 09:05:14 +0200</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing how to use some container vulnerabilities scanners with Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/testing-container-vulnerabilities-scanners-using-azure-pipelines/</link>
      <pubDate>Wed, 27 Oct 2021 09:05:14 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/testing-container-vulnerabilities-scanners-using-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Just show me the code
As always if you don’t care about the post I have upload the source code on my Github.
 A big part of any organization’s risk assessment process is to be aware of and gain visibility into vulnerabilities in the software being used. Vulnerability scanning allows us to review the security state of the container images and take actions to fix issues identified during the scan, resulting in more secure deployments.
          
        
        </description>
    </item>
    
    <item>
      <title>Trying to setup an Azure DevOps organization using Terraform</title>
      <link>https://www.mytechramblings.com/posts/automate-azure-devops-setup-using-terraform/</link>
      <pubDate>Thu, 18 Mar 2021 10:00:02 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/automate-azure-devops-setup-using-terraform/</guid>
      <description>
        
          
          
          
        
        
        
          Show me the code
If you don&amp;rsquo;t care about my writings I have upload the code on my Github
 On today&amp;rsquo;s post I want to try to automate the setup of an Azure DevOps organization using the Azure DevOps Terraform provider.
 You might also be interested in these post I wrote a few months ago about automating the AAD App Registration process using the Terraform Azure Active Directory provider.
          
        
        </description>
    </item>
    
    <item>
      <title>An opinionated approach about how to create an AWS ECS Fargate cluster and deploy apps on it using Azure DevOps Pipelines</title>
      <link>https://www.mytechramblings.com/posts/create-an-ecs-cluster-and-deploy-apps-using-azure-devops/</link>
      <pubDate>Tue, 10 Nov 2020 10:10:18 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-an-ecs-cluster-and-deploy-apps-using-azure-devops/</guid>
      <description>
        
          
          
          
        
        
        
          These past couple of weeks I&amp;rsquo;ve been tinkering with AWS ECS Fargate and after losing some time tackling different approaches I thought it might be useful to write down what I ended up building.
My goal was trying to build an AWS ECS Fargate cluster and deploy apps on it using Azure DevOps Pipelines and I had 3 clear objectives I wanted to achieve.
 All the infrastructure in AWS must be created using IaC (infrastructure-as-code) and must be created using an Azure DevOps pipeline.
          
        
        </description>
    </item>
    
    <item>
      <title>Provisioning resources on AWS using AWS CDK and Azure DevOps Pipelines</title>
      <link>https://www.mytechramblings.com/posts/provisioning-aws-resources-using-cdk-azure-devops/</link>
      <pubDate>Wed, 30 Sep 2020 10:02:21 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/provisioning-aws-resources-using-cdk-azure-devops/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction First of all let me tell you that I&amp;rsquo;m huge proponent of Terraform as a framework for defining infrastructure in code. One of the things that I like most about Terraform is that not only every major cloud provider (AWS, Azure, GCP) offers their own provider but each day more and more companies are starting to offer their own Terraform providers, and those are great news because with Terraform I can create almost any cloud infrastructure that I want and also a huge array of varied resources such as: VMware vSphere Virtual Machines, RabbitMq Queues, Grafana dashboards amongst many many others.
          
        
        </description>
    </item>
    
  </channel>
</rss>