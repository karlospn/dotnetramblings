<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/devops/</link>
    <description>Recent content in devops on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Sep 2022 11:06:41 +0200</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Keep your .NET platform images up to date using AWS ECR and Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/keep-your-platform-images-updated-when-using-aws-ecr-with-azure-pipelines/</link>
      <pubDate>Thu, 08 Sep 2022 11:06:41 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/keep-your-platform-images-updated-when-using-aws-ecr-with-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          When talking about containers security on the enterprise one of the best practices is to use your own platform images, those platform images are the base for your company applications. In this post I&#39;m going to show you an opinionated implementation of how to automate the creation and update of your own .NET platform images using Azure Pipelines and AWS ECR.
          
        
        </description>
    </item>
    
    <item>
      <title>How to easily check on your CI/CD pipelines if your app has a NuGet package with a security vulnerability</title>
      <link>https://www.mytechramblings.com/posts/check-if-your-dotnet-app-dependencies-has-a-security-vulnerability-on-you-cicd-pipelines/</link>
      <pubDate>Tue, 09 Aug 2022 10:01:21 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/check-if-your-dotnet-app-dependencies-has-a-security-vulnerability-on-you-cicd-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Almost any dotnet application has several NuGet dependencies, and those dependencies may have their own dependencies, and so on and so forth. What if any of those dependencies you&#39;re using contains a security vulnerability? You can check on your CI/CD pipeline if your application has any known NuGet vulnerability with just a couple of lines of bash script.
          
        
        </description>
    </item>
    
    <item>
      <title>Linting a .NET 6 app Dockerfile using Hadolint, dockerfile_lint and Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/linting-a-dotnet-app-dockerfile-using-hadolint-dockerfile-lint-and-azure-pipelines/</link>
      <pubDate>Mon, 16 May 2022 10:05:01 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/linting-a-dotnet-app-dockerfile-using-hadolint-dockerfile-lint-and-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Like any other language, Dockerfiles can and should be linted for updated best practices and code quality checks. In this post I will show you how to incorporate a couple of Dockerfile linters into our Secure DevOps workflow to ensure our Dockerfiles are always readable, understandable and maintainable.
          
        
        </description>
    </item>
    
    <item>
      <title>How to bootstrap Terraform and Azure DevOps to start deploying your infrastructure as code to Azure</title>
      <link>https://www.mytechramblings.com/posts/how-to-bootstrap-terraform-and-azdo-to-start-deploying-iac-to-azure/</link>
      <pubDate>Tue, 19 Apr 2022 12:30:10 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-bootstrap-terraform-and-azdo-to-start-deploying-iac-to-azure/</guid>
      <description>
        
          
          
          
        
        
        
          Deploying infrastructure as code on Azure using Azure Pipelines and Terraform requires a minimal bootstrap process. This process can be done manually, but you&#39;ll have to do it every time you want to start deploying resources into a new subscription. So, having some kind of automation seems the way to go here. And that&#39;s exactly what I want to show in this post, how to programmatically bootstrap an Azure subscription and an Azure DevOps project to start deploying Infrastructure as Code with Terraform.
          
        
        </description>
    </item>
    
    <item>
      <title>Testing how to use some container vulnerabilities scanners with Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/testing-container-vulnerabilities-scanners-using-azure-pipelines/</link>
      <pubDate>Mon, 25 Oct 2021 10:45:14 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/testing-container-vulnerabilities-scanners-using-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Vulnerability scanning allows us to review the security state of the container images and take actions to fix issues identified during the scan, resulting in more secure deployments. In this post I will be covering how you can use some of the most well-known scanners alongside with your Azure DevOps CI/CD YAML Pipelines.
          
        
        </description>
    </item>
    
    <item>
      <title>Trying to setup an Azure DevOps organization using Terraform</title>
      <link>https://www.mytechramblings.com/posts/automate-azure-devops-setup-using-terraform/</link>
      <pubDate>Thu, 18 Mar 2021 10:00:02 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/automate-azure-devops-setup-using-terraform/</guid>
      <description>
        
          
          
          
        
        
        
          On today&#39;s post I want to test the Azure DevOps Terraform provider and that&#39;s why I&#39;ll be trying to automate the setup of an Azure DevOps organization using it.
          
        
        </description>
    </item>
    
    <item>
      <title>An opinionated approach about how to create an AWS ECS Fargate cluster and deploy apps on it using Azure DevOps Pipelines</title>
      <link>https://www.mytechramblings.com/posts/create-an-ecs-cluster-and-deploy-apps-using-azure-devops/</link>
      <pubDate>Tue, 10 Nov 2020 10:10:18 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-an-ecs-cluster-and-deploy-apps-using-azure-devops/</guid>
      <description>
        
          
          
          
        
        
        
          These past couple of weeks I&#39;ve been tinkering with AWS ECS Fargate and after losing some time tackling different approaches I thought it might be useful to write down what I ended up building, so without further ado let&#39;s dig in.
          
        
        </description>
    </item>
    
    <item>
      <title>Provisioning resources on AWS using AWS CDK and Azure DevOps Pipelines</title>
      <link>https://www.mytechramblings.com/posts/provisioning-aws-resources-using-cdk-azure-devops/</link>
      <pubDate>Wed, 30 Sep 2020 10:02:21 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/provisioning-aws-resources-using-cdk-azure-devops/</guid>
      <description>
        
          
          
          
        
        
        
          In today&#39;s post I will show you how you can deploy an AWS CDK application using Azure DevOps.
          
        
        </description>
    </item>
    
  </channel>
</rss>