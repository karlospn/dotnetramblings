<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/azure/</link>
    <description>Recent content in azure on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Oct 2021 09:05:14 +0200</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing how to use some container vulnerabilities scanners with Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/testing-container-vulnerabilities-scanners-using-azure-pipelines/</link>
      <pubDate>Wed, 27 Oct 2021 09:05:14 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/testing-container-vulnerabilities-scanners-using-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Just show me the code
As always if you don’t care about the post I have upload the source code on my Github.
 A big part of any organization’s risk assessment process is to be aware of and gain visibility into vulnerabilities in the software being used. Vulnerability scanning allows us to review the security state of the container images and take actions to fix issues identified during the scan, resulting in more secure deployments.
          
        
        </description>
    </item>
    
    <item>
      <title>Securing a graphQL API with Azure Active Directory</title>
      <link>https://www.mytechramblings.com/posts/securing-dotnet-graphql-api-with-aad/</link>
      <pubDate>Tue, 24 Aug 2021 10:21:33 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/securing-dotnet-graphql-api-with-aad/</guid>
      <description>
        
          
          
          
        
        
        
          Just show me the code
As always if you don’t care about the post I have upload the source code on my Github.
 In today&amp;rsquo;s post I want to talk about how you can secure a .NET graphQL API using Azure Active Directory (AAD).
If you want to build a graphQL API in .NET right now, the most well-known options available are the graphQL.NET implementation (https://graphql-dotnet.github.io/) and the HotChocolate one (https://chillicream.
          
        
        </description>
    </item>
    
    <item>
      <title>Trying to setup an Azure DevOps organization using Terraform</title>
      <link>https://www.mytechramblings.com/posts/automate-azure-devops-setup-using-terraform/</link>
      <pubDate>Thu, 18 Mar 2021 10:00:02 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/automate-azure-devops-setup-using-terraform/</guid>
      <description>
        
          
          
          
        
        
        
          Show me the code
If you don&amp;rsquo;t care about my writings I have upload the code on my Github
 On today&amp;rsquo;s post I want to try to automate the setup of an Azure DevOps organization using the Azure DevOps Terraform provider.
 You might also be interested in these post I wrote a few months ago about automating the AAD App Registration process using the Terraform Azure Active Directory provider.
          
        
        </description>
    </item>
    
    <item>
      <title>Testing out the Azure Static Web Apps service. Let&#39;s try to deploy this blog into an static web app</title>
      <link>https://www.mytechramblings.com/posts/moving-this-blog-to-azure-static-webapps/</link>
      <pubDate>Tue, 24 Nov 2020 10:04:40 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/moving-this-blog-to-azure-static-webapps/</guid>
      <description>
        
          
          
          
        
        
        
          If you only care about the end result, I upload the final result in this GitHub repository: github-link
This repository contains the entire blog source code.
In the &amp;quot;/infrastructure&amp;quot; folder you can find an ARM template that is used to create the static web app.
In the /.github/workflows folder you can find a couple of github actions:
 The infrastructure.yml file is a github action that creates the resources on Azure.
          
        
        </description>
    </item>
    
    <item>
      <title>An opinionated approach about how to create an AWS ECS Fargate cluster and deploy apps on it using Azure DevOps Pipelines</title>
      <link>https://www.mytechramblings.com/posts/create-an-ecs-cluster-and-deploy-apps-using-azure-devops/</link>
      <pubDate>Tue, 10 Nov 2020 10:10:18 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-an-ecs-cluster-and-deploy-apps-using-azure-devops/</guid>
      <description>
        
          
          
          
        
        
        
          These past couple of weeks I&amp;rsquo;ve been tinkering with AWS ECS Fargate and after losing some time tackling different approaches I thought it might be useful to write down what I ended up building.
My goal was trying to build an AWS ECS Fargate cluster and deploy apps on it using Azure DevOps Pipelines and I had 3 clear objectives I wanted to achieve.
 All the infrastructure in AWS must be created using IaC (infrastructure-as-code) and must be created using an Azure DevOps pipeline.
          
        
        </description>
    </item>
    
    <item>
      <title>Answering some basic questions about registering applications on Azure Active Directory</title>
      <link>https://www.mytechramblings.com/posts/answering-basic-questions-about-aad-app-registrations/</link>
      <pubDate>Wed, 14 Oct 2020 10:00:50 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/answering-basic-questions-about-aad-app-registrations/</guid>
      <description>
        
          
          
          
        
        
        
          These past years I worked with a few companies that uses Azure Active Directory to perform authentication and authorization on their line-of-business (LOB) applications and from time to time I get questions about how to register apps on AAD.
Those questions are always pretty similar and most of the time the problem lies in some misconception, so I thought it might be a good idea to try to answer some of them and at the same time write them down in this post.
          
        
        </description>
    </item>
    
    <item>
      <title>Provisioning resources on AWS using AWS CDK and Azure DevOps Pipelines</title>
      <link>https://www.mytechramblings.com/posts/provisioning-aws-resources-using-cdk-azure-devops/</link>
      <pubDate>Wed, 30 Sep 2020 10:02:21 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/provisioning-aws-resources-using-cdk-azure-devops/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction First of all let me tell you that I&amp;rsquo;m huge proponent of Terraform as a framework for defining infrastructure in code. One of the things that I like most about Terraform is that not only every major cloud provider (AWS, Azure, GCP) offers their own provider but each day more and more companies are starting to offer their own Terraform providers, and those are great news because with Terraform I can create almost any cloud infrastructure that I want and also a huge array of varied resources such as: VMware vSphere Virtual Machines, RabbitMq Queues, Grafana dashboards amongst many many others.
          
        
        </description>
    </item>
    
    <item>
      <title>A practical example of GitOps using Azure DevOps, Azure Container Registry, Helm, Flux and Kubernetes</title>
      <link>https://www.mytechramblings.com/posts/gitops-with-azure-devops-helm-acr-flux-and-k8s/</link>
      <pubDate>Wed, 29 Jul 2020 22:10:21 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/gitops-with-azure-devops-helm-acr-flux-and-k8s/</guid>
      <description>
        
          
          
          
        
        
        
          GitOps is a term introduced by WeaveWorks a few years ago (https://www.weave.works/blog/gitops-operations-by-pull-request)
GitOps is a way of implementing Continuous Deployment. The core idea of GitOps is having a Git repository that always contains declarative descriptions of the infrastructure currently desired in the production environment and an automated process to make the production environment match the described state in the repository.
If you want to deploy a new application or update an existing one, you only need to update the repository - the automated process handles everything else.
          
        
        </description>
    </item>
    
    <item>
      <title>Trying to automate Azure Active Directory App Registration process using Terraform</title>
      <link>https://www.mytechramblings.com/posts/automate-azure-ad-app-registration-using-terraform/</link>
      <pubDate>Tue, 21 Jul 2020 21:22:44 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/automate-azure-ad-app-registration-using-terraform/</guid>
      <description>
        
          
          
          
        
        
        
          &amp;gt; Updated content:
I wrote the original post almost 6 months ago and since then the AAD Terraform provider has been updated several times.
When I wrote the post I used the version 0.11 and right now the provider is on version 1.1.1, that&amp;rsquo;s a considerable version bump so some people asked me if I could update this post.
Without further ado let&amp;rsquo;s rebuild this example using the 1.1.1 version.
          
        
        </description>
    </item>
    
    <item>
      <title>Why and how you should add a healthcheck endpoint to your Wcf legacy applications</title>
      <link>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</link>
      <pubDate>Sat, 04 Jul 2020 17:30:06 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</guid>
      <description>
        
          
          
          
        
        
        
          Nowadays no one on his right mind is going to create a WCF from scratch. It really makes no sense to do it. It&amp;rsquo;s a deprecated technology, it does not work with .NET Core, only works on Windows OS and personally I found the configuration confusing as hell, every time I need to modify an existing one I have to spend a good amount of time trying to figure out what everything means.
          
        
        </description>
    </item>
    
  </channel>
</rss>