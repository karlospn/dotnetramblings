<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Csharp on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/csharp/</link>
    <description>Recent content in Csharp on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Dec 2023 12:03:32 +0100</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An opinionated list of tips for building .NET 8 app templates</title>
      <link>https://www.mytechramblings.com/posts/an-opinionated-list-of-tips-for-building-a-dotnet-8-template/</link>
      <pubDate>Thu, 28 Dec 2023 12:03:32 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/an-opinionated-list-of-tips-for-building-a-dotnet-8-template/</guid>
      <description>
        
          
          
          
        
        
        
          I have been developing .NET templates for quite some time, and as a result, I thought it might be helpful to compile a list of tips to consider when creating a .NET template for your own or your company&#39;s apps.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with OpenTelemetry Metrics in .NET 8. Part 2: Instrumenting the BookStore API</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-2/</link>
      <pubDate>Wed, 29 Nov 2023 10:10:55 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-2/</guid>
      <description>
        
          
          
          
        
        
        
          In this two-part series, I’m going to show you how to use OpenTelemetry to generate custom metrics and how to visualize those metrics using Prometheus and Grafana. In part 2, I’ll demonstrate how to add OpenTelemetry Metrics to a real life .NET 8 app and how to visualize those metrics using Prometheus and Grafana.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with OpenTelemetry Metrics in .NET 8. Part 1: Key concepts</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-1/</link>
      <pubDate>Wed, 29 Nov 2023 10:00:55 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-metrics-and-dotnet-part-1/</guid>
      <description>
        
          
          
          
        
        
        
          In this two-part series, I’m going to show you how to use OpenTelemetry to generate custom metrics and how to visualize those metrics using Prometheus and Grafana. In part 1, I’ll be discussing some key concepts that you should know when using OpenTelemetry Metrics with dotnet.
          
        
        </description>
    </item>
    
    <item>
      <title>Getting started with OpenTelemetry and distributed tracing in .NET</title>
      <link>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-and-dotnet-core/</link>
      <pubDate>Mon, 25 Sep 2023 12:41:51 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/getting-started-with-opentelemetry-and-dotnet-core/</guid>
      <description>
        
          
          
          
        
        
        
          OpenTelemetry is a set of APIs, SDKs, tooling and integrations that are designed for the creation and management of telemetry data such as traces, metrics, and logs. On today&#39;s post I&#39;m going to show you how you can start using OTEL and distributed tracing with .NET.
          
        
        </description>
    </item>
    
    <item>
      <title>Building a C# enhancing app using Azure OpenAI GPT-4 and Streamlit</title>
      <link>https://www.mytechramblings.com/posts/building-a-csharp-enhancing-app-using-openai-gpt4-and-streamlit/</link>
      <pubDate>Mon, 10 Jul 2023 10:00:01 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/building-a-csharp-enhancing-app-using-openai-gpt4-and-streamlit/</guid>
      <description>
        
          
          
          
        
        
        
          This post demonstrates the simplicity of developing an app that can enhances a C# file using only GenAI&#39;s basic skills. By utilizing Azure OpenAI GPT-4 model, the app can effortlessly add or improve XML comments, provide code explanations, suggest enhancements, and generate unit tests for any given C# file.
          
        
        </description>
    </item>
    
    <item>
      <title>Linting a .NET 6 app Dockerfile using Hadolint, dockerfile_lint and Azure Pipelines</title>
      <link>https://www.mytechramblings.com/posts/linting-a-dotnet-app-dockerfile-using-hadolint-dockerfile-lint-and-azure-pipelines/</link>
      <pubDate>Mon, 16 May 2022 10:05:01 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/linting-a-dotnet-app-dockerfile-using-hadolint-dockerfile-lint-and-azure-pipelines/</guid>
      <description>
        
          
          
          
        
        
        
          Like any other language, Dockerfiles can and should be linted for updated best practices and code quality checks. In this post I will show you how to incorporate a couple of Dockerfile linters into our Secure DevOps workflow to ensure our Dockerfiles are always readable, understandable and maintainable.
          
        
        </description>
    </item>
    
    <item>
      <title>Profiling a .NET6 app running on AWS ECS Fargate with dotnet-monitor</title>
      <link>https://www.mytechramblings.com/posts/profiling-a-net-app-on-aws-ecs-fargate-with-dotnet-monitor/</link>
      <pubDate>Wed, 30 Mar 2022 10:25:20 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/profiling-a-net-app-on-aws-ecs-fargate-with-dotnet-monitor/</guid>
      <description>
        
          
          
          
        
        
        
          The dotnet-monitor tool is an alternative to the .NET CLI diagnostic tools. In this post I&#39;ll show you how to deploy a .NET 6 application into AWS ECS Fargate with dotnet-monitor as a sidecar container, and afterwards how you can profile an app using the dotnet-monitor HTTP API.
          
        
        </description>
    </item>
    
    <item>
      <title>Profiling a .NET6 app running in a linux container with dotnet-trace, dotnet-dump, dotnet-counters, dotnet-gcdump and Visual Studio</title>
      <link>https://www.mytechramblings.com/posts/profiling-a-net-app-with-dotnet-cli-diagnostic-tools/</link>
      <pubDate>Tue, 01 Mar 2022 10:01:37 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/profiling-a-net-app-with-dotnet-cli-diagnostic-tools/</guid>
      <description>
        
          
          
          
        
        
        
          This post contains a few practical examples showing you how to profile a .NET6 application running in a linux container using the .NET CLI diagnostic tools (dotnet-trace, dotnet-dump, dotnet-counters and dotnet-gcdump) and Visual Studio.
          
        
        </description>
    </item>
    
    <item>
      <title>Setting up the SonarQube scanner when building a .NET Core container image</title>
      <link>https://www.mytechramblings.com/posts/running-a-sonarqube-scan-when-building-docker-image/</link>
      <pubDate>Tue, 14 Sep 2021 10:05:00 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/running-a-sonarqube-scan-when-building-docker-image/</guid>
      <description>
        
          
          
          
        
        
        
          If you&#39;re using containers quite probably you&#39;re doing the build, test and analysis steps inside the Dockerfile, and setting up the SonarQube scanner when building the image can be a little more cumbersome than usual, and that&#39;s why I wanted to write a little bit about it.
          
        
        </description>
    </item>
    
    <item>
      <title>Securing a graphQL API with Azure Active Directory</title>
      <link>https://www.mytechramblings.com/posts/securing-dotnet-graphql-api-with-aad/</link>
      <pubDate>Tue, 24 Aug 2021 10:21:33 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/securing-dotnet-graphql-api-with-aad/</guid>
      <description>
        
          
          
          
        
        
        
          In today&#39;s post I want to talk about how you can secure a .NET graphQL API that uses HotChocolate (https://chillicream.com/) with Azure Active Directory.
          
        
        </description>
    </item>
    
    <item>
      <title>How to build a .NET template and use it within Visual Studio. Part 2: Creating a template package</title>
      <link>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-2/</link>
      <pubDate>Thu, 17 Jun 2021 10:01:29 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-2/</guid>
      <description>
        
          
          
          
        
        
        
          This is a 2 part-series post. In part 2 I&#39;ll show you how to convert a few .NET apps into .NET templates, package them together in a single NuGet pack and use them as templates within Visual Studio.
          
        
        </description>
    </item>
    
    <item>
      <title>How to build a .NET template and use it within Visual Studio. Part 1: Key concepts</title>
      <link>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-1/</link>
      <pubDate>Mon, 14 Jun 2021 00:07:29 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/create-dotnet-templates-for-visual-studio-part-1/</guid>
      <description>
        
          
          
          
        
        
        
          This is a 2 part-series post. In part 1 I&#39;ll be talking about a few key concepts that you should know when creating a .NET template.
          
        
        </description>
    </item>
    
    <item>
      <title>How to configure your custom roslyn analyzer using an .editorconfig file</title>
      <link>https://www.mytechramblings.com/posts/configure-roslyn-analyzers-using-editorconfig/</link>
      <pubDate>Thu, 14 Jan 2021 12:59:43 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/configure-roslyn-analyzers-using-editorconfig/</guid>
      <description>
        
          
          
          
        
        
        
          Roslyn Analyzers are extensions that analyze source code and report violations. Some analyzers are built-into VS and some are third party ones which can be installed (like StyleCopyAnalyzers, FxCopAnalyzers, etc.). On today&#39;s post I will show you how you can configure your custom roslyn analyzers with an .editorconfig file.
          
        
        </description>
    </item>
    
    <item>
      <title>How to centrally manage NuGet package versions within your solution</title>
      <link>https://www.mytechramblings.com/posts/centrally-manage-nuget-versions/</link>
      <pubDate>Wed, 02 Sep 2020 10:01:20 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/centrally-manage-nuget-versions/</guid>
      <description>
        
          
          
          
        
        
        
          In this post I want to show you some of the different options available when you want to centrally manage NuGet versions within a solution.
          
        
        </description>
    </item>
    
    <item>
      <title>How to restore nuget packages from an Azure DevOps Private Feed when building a Docker image</title>
      <link>https://www.mytechramblings.com/posts/how-to-use-a-private-nuget-feed-with-docker/</link>
      <pubDate>Tue, 14 Jul 2020 19:12:41 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-use-a-private-nuget-feed-with-docker/</guid>
      <description>
        
          
          
          
        
        
        
          In this post I&#39;ll show you how to restore NuGet packages from an Azure DevOps private feed when building a Docker image.
          
        
        </description>
    </item>
    
    <item>
      <title>Why and how you should add a healthcheck endpoint to your Wcf legacy applications</title>
      <link>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</link>
      <pubDate>Sat, 04 Jul 2020 17:30:06 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</guid>
      <description>
        
          
          
          
        
        
        
          What I wanted to talk in these post is how easy is to add a healthcheck endpoint in a WCF application, and how you can use it in case you want to move the application into the Cloud in the near future.
          
        
        </description>
    </item>
    
    <item>
      <title>Enforce the use of a specific .NET Core version using Roslyn</title>
      <link>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</link>
      <pubDate>Wed, 24 Jun 2020 15:25:42 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</guid>
      <description>
        
          
          
          
        
        
        
          In these past few years Microsoft has kept a steady flow of new .NET Core versions, and if you have hundreds of applications in your company it&#39;s almost impossible to keep them updated to the most recent version of the framework. If you want to enforce that everyone on your company is using the correct framework version when they create a new application you can use a Roslyn Analyzer.
          
        
        </description>
    </item>
    
  </channel>
</rss>