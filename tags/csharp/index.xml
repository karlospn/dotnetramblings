<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csharp on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/csharp/</link>
    <description>Recent content in csharp on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jul 2020 18:12:41 +0200</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Restore a Nuget from an Azure DevOps Private Feed within Docker</title>
      <link>https://www.mytechramblings.com/posts/how-to-use-a-private-nuget-feed-with-docker/</link>
      <pubDate>Tue, 14 Jul 2020 18:12:41 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-use-a-private-nuget-feed-with-docker/</guid>
      <description>
        
          
          
          
        
        
        
          Let&amp;rsquo;s go for a quick post this time.
You are trying to create a Docker image from an app, that application is using some custom Nugets.
Those Nugets are hosted in your private Azure DevOps Feed.
I&amp;rsquo;m pretty confident that some of these errors are going to sound pretty familiar to you when you try to build the image:
/src/MyConsoleApplication.csproj : error NU1101: Unable to find package MyOwn.EmailService. No packages exist with this id in source(s): nuget.
          
        
        </description>
    </item>
    
    <item>
      <title>Why and how you should add a healthcheck endpoint to your Wcf legacy applications</title>
      <link>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</link>
      <pubDate>Sat, 04 Jul 2020 17:30:06 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/how-to-add-healthchecks-to-wcf-apps/</guid>
      <description>
        
          
          
          
        
        
        
          Nowadays no one on his right mind is going to create a WCF from scratch. It really makes no sense to do it. It&amp;rsquo;s a deprecated technology, it does not work with .NET Core, only works on Windows OS and personally I found the configuration confusing as hell, every time I need to modify an existing one I have to spend a good amount of time trying to figure out what everything means.
          
        
        </description>
    </item>
    
    <item>
      <title>Enforce the use of a specific .NET Core version using Roslyn</title>
      <link>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</link>
      <pubDate>Wed, 24 Jun 2020 15:25:42 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</guid>
      <description>
        
          
          
          
        
        
        
          In these past few years Microsoft has kept a steady flow of new .NET Core versions: .NET Core 1.0, 1.1, 2.0, 2.1, 2.2 and so on and so forth.
If you have hundreds of applications in your company, it&amp;rsquo;s almost impossible to keep them updated to the most recent version of the framework, so most probably you&amp;rsquo;re going to end up having multiple versions running at the same time.
When trying to choose which versions are you going to support in your company a factor to consider is that only a few of those versions are long-time support (LTS).
          
        
        </description>
    </item>
    
  </channel>
</rss>