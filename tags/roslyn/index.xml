<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>roslyn on my tech ramblings</title>
    
    
    
    <link>https://www.mytechramblings.com/tags/roslyn/</link>
    <description>Recent content in roslyn on my tech ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Jan 2021 12:59:43 +0100</lastBuildDate>
    
	<atom:link href="https://www.mytechramblings.com/tags/roslyn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to configure your custom roslyn analyzer using an .editorconfig file</title>
      <link>https://www.mytechramblings.com/posts/configure-roslyn-analyzers-using-editorconfig/</link>
      <pubDate>Thu, 14 Jan 2021 12:59:43 +0100</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/configure-roslyn-analyzers-using-editorconfig/</guid>
      <description>
        
          
          
          
        
        
        
          Roslyn Analyzers are extensions that analyze source code and report violations. Some analyzers are built-into VS (like the IDE analyzers that report style issues) and some are third party ones which can be installed (like StyleCopyAnalyzers, FxCopAnalyzers, etc.).
Analyzers can be configurated using file(s) to allow end users to control the behavior of each analyzer and severity of reported diagnostics. This may be via an editorconfig or a ruleset file or even completely custom format specific to the third party analyzer package.
          
        
        </description>
    </item>
    
    <item>
      <title>Enforce the use of a specific .NET Core version using Roslyn</title>
      <link>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</link>
      <pubDate>Wed, 24 Jun 2020 15:25:42 +0200</pubDate>
      
      <guid>https://www.mytechramblings.com/posts/enforce-your-dotnet-apps-framework-version-using-roslyn-analyzers/</guid>
      <description>
        
          
          
          
        
        
        
          In these past few years Microsoft has kept a steady flow of new .NET Core versions: .NET Core 1.0, 1.1, 2.0, 2.1, 2.2 and so on and so forth.
If you have hundreds of applications in your company, it&amp;rsquo;s almost impossible to keep them updated to the most recent version of the framework, so most probably you&amp;rsquo;re going to end up having multiple versions running at the same time.
When trying to choose which versions are you going to support in your company a factor to consider is that only a few of those versions are long-time support (LTS).
          
        
        </description>
    </item>
    
  </channel>
</rss>